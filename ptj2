import java.util.ArrayList;	
import java.util.HashMap;	;
interface IEmployeeWageComputation	
{	{
    public void addCompany(String companyName, int wagePerHr, int maxWorkingDays, int maxWorkingHrs);	    
    public void calculateTotalWage();	    
    public int getTotalEmpWage(String companyName);	    
}	}


class CompanyEmpWage	
{
    // instance constants	   
    final String COMPANY_NAME;	  
@@ -20,6 +20,7 @@
    // instance variable	  
    int totalEmpWage;	 


    //parameterized constructor to get and set the values
    CompanyEmpWage(String companyName, int wagePerHr, int maxWorkingDays, int maxWorkingHrs)	    
    {	    
        COMPANY_NAME = companyName;	       
@@ -29,14 +30,13 @@
        totalEmpWage = 0;	      
    }	    


    void setTotalEmployeeWage(int totalEmpWage)	    
    {	    
        this.totalEmpWage = totalEmpWage;	       
    }


    @Override	    @Override
    public String toString()	    
    {	
        System.out.println("Details of " + COMPANY_NAME + " employee");	        
        System.out.println("-----------------------------------------------------");	        
        System.err.println("Wage per hour:" + WAGE_PER_HR);	        
@@ -46,36 +46,41 @@ public String toString()
    }	    
}	


class EmployeeWageComputation implements IEmployeeWageComputation	 
{	{
    // class constants	    
    public static final int PART_TIME = 1;	    
    public static final int FULL_TIME = 2;	  
    // instance variables	    

    //references of companyempwage objects are stored in arraylist
    ArrayList<CompanyEmpWage> companies;	      
    HashMap<String, Integer> totalEmpWages;	    


    public EmployeeWageComputation()	
    public EmployeeWageComputation() 
    {	    
        companies = new ArrayList<>();	        
        totalEmpWages = new HashMap<>();	        
    }	    


    public void addCompany(String companyName, int wagePerHr, int maxWorkingDays, int maxWorkingHrs)	   
    public void addCompany(String companyName, int wagePerHr, int maxWorkingDays, int maxWorkingHrs) 
    {	    
        CompanyEmpWage company = new CompanyEmpWage(companyName, wagePerHr, maxWorkingDays, maxWorkingHrs);	        
        companies.add(company);	        
        totalEmpWages.put(companyName, 0);	       
    }	    


    int generateEmployeeType()	
    {	    
        return (int) (Math.random() * 100) % 3;	     
    }	    


    int getWorkingHrs(int empType)	   
    {	    
        switch (empType)	     
        {	        
            case FULL_TIME:	            c
                return 8;	           
@@ -86,42 +91,42 @@ int getWorkingHrs(int empType)
        }	        }
    }	    


    public void calculateTotalWage()	
    {	    
        for (CompanyEmpWage company : companies)	        
        {	        
            int totalWage = calculateTotalWage(company);	        
            company.setTotalEmployeeWage(totalWage);	            
            System.out.println(company);	            
        }	        
    }	    


    int calculateTotalWage(CompanyEmpWage companyEmpWag
    {	    {
        System.out.println("Computation of total wage of " + companyEmpWage.COMPANY_NAME + " employee");	      
        System.out.println("-----------------------------------------------------");	        
        System.out.printf("%5s     %5s     %5s     %5s\n", "Day", "Workinghrs", "Wage", "Total working hrs");	        


        int workingHrs, totalWage = 0;	     
        for (int day = 1, totalWorkingHrs = 0;    
                && totalWorkingHrs <= companyEmpWage.MAX_WORKING_HRS;	                
        {	        {
            int empType = generateEmployeeType();	            
            workingHrs = getWorkingHrs(empType);	            
            int wage = workingHrs * companyEmpWage.WAGE_PER_HR;	            i
            totalWage += wage;	            
          
        totalEmpWages.put(companyEmpWage.COMPANY_NAME, totalWage);	      
        return totalWage;	        
    }	    


    public int getTotalEmpWage(String companyName)	    
    {	    
        return totalEmpWages.get(companyName);	       
    }	    }


    public static void main(String args[])	    p
    {	    {
        EmployeeWageComputation employeeWageComputation = new EmployeeWageComputation();	       
        employeeWageComputation.addCompany("Microsoft", 4, 30, 100);
